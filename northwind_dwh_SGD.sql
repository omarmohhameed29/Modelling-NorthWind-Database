CREATE TABLE if not exists products_dim (
	product_key    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	prodcut_name varchar(40), -- type 2
    product_id int,  -- type 2
	category_id int,  -- type 2
	category_name varchar(15),   -- type 2 
	quantity_per_unit varchar(20),   -- type 1
	units_on_order smallint,  -- type 1
	discontinued bit   -- type 1
);

ALTER TABLE products_dim
ADD COLUMN product_name varchar(40); -- type 2

CREATE TABLE if not exists customers_dim (
	customer_key    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id int,  -- type 2
	company_name varchar(40),   -- type 2
	contact_name varchar(30),  -- type 1
	contact_title varchar(30),  -- type 1
	city varchar(15), -- type 2
	region varchar(10),  -- type 2
	postal_code varchar(15),   -- type 2
	coutnry varchar(15)  -- type 2
);


-- Create the date_dimension table
CREATE TABLE if not exists date_dim (
    date_key INT PRIMARY KEY,
    full_date DATE,
    year INT,
    quarter INT,
    month INT,
    day INT,
    day_of_week INT,
    day_of_year INT,
    week_of_year INT,
    is_weekend BOOLEAN,
    is_holiday BOOLEAN
);

-- Populate the date_dimension table with dates
-- DO $$ 
-- DECLARE 
--     curr_date DATE := '1996-07-04';
--     end_date DATE := '2030-12-31';
-- BEGIN
--     WHILE curr_date <= end_date LOOP
--         INSERT INTO date_dim (date_key, full_date, year, quarter, month, day, day_of_week, day_of_year, week_of_year, is_weekend, is_holiday)
--         VALUES (
--             EXTRACT(YEAR FROM curr_date) * 10000 + EXTRACT(MONTH FROM curr_date) * 100 + EXTRACT(DAY FROM curr_date), -- date_key in YYYYMMDD format
--             curr_date, -- full_date
--             EXTRACT(YEAR FROM curr_date), -- year
--             EXTRACT(QUARTER FROM curr_date), -- quarter
--             EXTRACT(MONTH FROM curr_date), -- month
--             EXTRACT(DAY FROM curr_date), -- day
--             EXTRACT(ISODOW FROM curr_date), -- day_of_week (Monday=1, Tuesday=2, ..., Sunday=7)
--             EXTRACT(DOY FROM curr_date), -- day_of_year
--             EXTRACT(WEEK FROM curr_date), -- week_of_year
--             EXTRACT(ISODOW FROM curr_date) IN (6, 7), -- is_weekend (True for Saturday or Sunday, False otherwise)
--             -- You can add logic to determine holidays and set is_holiday accordingly
--             FALSE
--         );
--         curr_date := curr_date + INTERVAL '1 day';
--     END LOOP;
-- END $$;



CREATE TABLE if not exists employees_dim (
	employee_key    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    employee_id int,  -- type 2
	last_name varchar(20),  -- type 2
	first_name varchar(20),  -- type 2
	title varchar(30),   -- type 2
	birth_date date, -- type 0
	hire_date date,  -- type 0
	reports_to int  -- type 1
);


CREATE TABLE if not exists suppliers_dim (
	supplier_key    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    supplier_id int,  -- type 2
	company_name varchar(40),  -- type 2
	contact_name varchar(20),  -- type 2
	contact_title varchar(30),   -- type 1
	city varchar(15),  -- type 2
	region varchar(10),  -- type 2
	postal_code varchar(15),  -- type 2
	country varchar(15),  -- type 2
);



CREATE TABLE if not exists orders_fact (
	order_key    integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
	order_id int,   -- type 2
	customer_key int references customers_dim(customer_key),  -- type 2
	employee_key int references employees_dim(employee_key),  -- type 2
	order_date_key int references date_dim(date_key),  -- type 2
	required_date_key int references date_dim(date_key),  -- type 2
	shipped_date_key int references date_dim(date_key),  -- type 2
	shipper_id int,  -- type 2
	shipper_company_name varchar(40),   -- type 2
	shipper_phone varchar(24),  -- type 1
	freight numeric(10, 2),   -- type 1
	ship_name varchar(40),  -- type 2
	supplier_key int references suppliers_dim(supplier_key),  -- type 2
	product_key int references products_dim(product_key),  -- type 2
	unit_price numeric(10, 2),  -- type 1
	quantity smallint,  -- type 1
	discount real  -- type 1
);



